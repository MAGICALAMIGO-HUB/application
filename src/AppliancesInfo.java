
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author dell
 */
public class AppliancesInfo extends javax.swing.JFrame{

    public AppliancesInfo(){
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        new_accessory_entry = new javax.swing.JPanel();
        image11 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        InID = new javax.swing.JTextField();
        InName = new javax.swing.JTextField();
        InBrand = new javax.swing.JTextField();
        InPrice = new javax.swing.JTextField();
        InCategory = new javax.swing.JComboBox<>();
        Add_button = new javax.swing.JButton();
        InRecommendation = new javax.swing.JSlider();
        jLabel24 = new javax.swing.JLabel();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jLabel21 = new javax.swing.JLabel();
        InStock = new javax.swing.JTextField();
        Heading_for_software_Name = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        search_display = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        image2 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        searchpricecombo = new javax.swing.JComboBox<>();
        searchprice = new javax.swing.JButton();
        pricefield = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        Update5 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        Update4 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        Update3 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        Update2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        Update1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        Update11 = new javax.swing.JRadioButton();
        Update12 = new javax.swing.JRadioButton();
        Update13 = new javax.swing.JRadioButton();
        jLabel22 = new javax.swing.JLabel();
        Update6 = new javax.swing.JComboBox<>();
        jLabel28 = new javax.swing.JLabel();
        Update8 = new javax.swing.JTextField();
        data_table = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        Delete_all_button = new javax.swing.JToggleButton();
        jButton3RemoveSelectedRow = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        jPanel2.setBackground(new java.awt.Color(229, 128, 57));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(214, 34, 70));
        setFocusable(false);
        setMinimumSize(new java.awt.Dimension(1345, 770));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        new_accessory_entry.setBackground(new java.awt.Color(13, 6, 48));

        image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/lens.png"))); // NOI18N
        image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Accessory ID");

        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Accessory Name");

        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("Accessory Category");

        jLabel6.setForeground(new java.awt.Color(240, 240, 240));
        jLabel6.setText("Price");

        jLabel7.setForeground(new java.awt.Color(240, 240, 240));
        jLabel7.setText("Brand");

        jLabel8.setForeground(new java.awt.Color(240, 240, 240));
        jLabel8.setText("Recommendation");

        jLabel9.setFont(new java.awt.Font("Arial Black", 3, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(240, 240, 240));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("New Accessory Entry");

        InID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InIDKeyPressed(evt);
            }
        });

        InName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InNameKeyPressed(evt);
            }
        });

        InBrand.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InBrandKeyPressed(evt);
            }
        });

        InPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InPriceKeyPressed(evt);
            }
        });

        InCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lens", "Camera", "Mic", "Tripod", "Blower", "SD Card" }));
        InCategory.setBorder(null);
        InCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        InCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InCategoryActionPerformed(evt);
            }
        });

        Add_button.setBackground(new java.awt.Color(255, 153, 0));
        Add_button.setText("Add Product");
        Add_button.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_buttonActionPerformed(evt);
            }
        });

        InRecommendation.setBackground(new java.awt.Color(13, 6, 48));
        InRecommendation.setForeground(new java.awt.Color(255, 153, 0));
        InRecommendation.setMajorTickSpacing(1);
        InRecommendation.setMaximum(10);
        InRecommendation.setMinorTickSpacing(1);
        InRecommendation.setPaintLabels(true);
        InRecommendation.setCursor(new java.awt.Cursor(java.awt.Cursor.E_RESIZE_CURSOR));

        jLabel24.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 153, 0));
        jLabel24.setText("Budget Level");

        jRadioButton4.setBackground(new java.awt.Color(13, 6, 48));
        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton4.setText("High");
        jRadioButton4.setToolTipText("");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jRadioButton5.setBackground(new java.awt.Color(13, 6, 48));
        buttonGroup1.add(jRadioButton5);
        jRadioButton5.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton5.setSelected(true);
        jRadioButton5.setText("Low");
        jRadioButton5.setToolTipText("");

        jRadioButton6.setBackground(new java.awt.Color(13, 6, 48));
        buttonGroup1.add(jRadioButton6);
        jRadioButton6.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton6.setText("Medium");
        jRadioButton6.setToolTipText("");

        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Stock");

        InStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InStockActionPerformed(evt);
            }
        });
        InStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InStockKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout new_accessory_entryLayout = new javax.swing.GroupLayout(new_accessory_entry);
        new_accessory_entry.setLayout(new_accessory_entryLayout);
        new_accessory_entryLayout.setHorizontalGroup(
            new_accessory_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(new_accessory_entryLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(new_accessory_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addGroup(new_accessory_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jRadioButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE))
                    .addGroup(new_accessory_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(InStock)
                        .addComponent(InBrand, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(InRecommendation, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(new_accessory_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, new_accessory_entryLayout.createSequentialGroup()
                            .addComponent(jRadioButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Add_button))
                        .addComponent(InPrice, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(InName, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(InID, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(image11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(new_accessory_entryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(37, 37, 37))
        );
        new_accessory_entryLayout.setVerticalGroup(
            new_accessory_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(new_accessory_entryLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(image11, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(InID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InRecommendation, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jRadioButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton5)
                .addGroup(new_accessory_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(new_accessory_entryLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton6)
                        .addContainerGap(98, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, new_accessory_entryLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Add_button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73))))
        );

        getContentPane().add(new_accessory_entry, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 260, 770));

        Heading_for_software_Name.setBackground(new java.awt.Color(229, 128, 57));

        jLabel14.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Search All :");

        jTextField11.setFont(new java.awt.Font("宋体", 0, 10)); // NOI18N
        jTextField11.setBorder(null);

        jButton2.setText("Search");
        jButton2.setBorder(null);

        jLabel27.setFont(new java.awt.Font("Arial Black", 2, 48)); // NOI18N
        jLabel27.setText("Camera Accessories");

        javax.swing.GroupLayout Heading_for_software_NameLayout = new javax.swing.GroupLayout(Heading_for_software_Name);
        Heading_for_software_Name.setLayout(Heading_for_software_NameLayout);
        Heading_for_software_NameLayout.setHorizontalGroup(
            Heading_for_software_NameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Heading_for_software_NameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        Heading_for_software_NameLayout.setVerticalGroup(
            Heading_for_software_NameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Heading_for_software_NameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Heading_for_software_NameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(Heading_for_software_NameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14))
                    .addGroup(Heading_for_software_NameLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(20, 20, 20))
            .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
        );

        getContentPane().add(Heading_for_software_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, 1110, 80));

        search_display.setBackground(new java.awt.Color(229, 128, 57));

        jPanel5.setBackground(new java.awt.Color(233, 152, 54));

        jPanel6.setBackground(new java.awt.Color(236, 175, 51));

        image2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/lens2.png"))); // NOI18N
        image2.setText("image2");
        image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel15.setText(".");

        jLabel16.setText(".");

        jLabel17.setText(".");

        jLabel18.setText(".");

        jLabel19.setText(".");

        jLabel20.setText(".");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(image2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(image2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel25.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jLabel25.setText("Price:");

        searchpricecombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Search for price", " " }));
        searchpricecombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchpricecomboMouseClicked(evt);
            }
        });
        searchpricecombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchpricecomboActionPerformed(evt);
            }
        });

        searchprice.setText("Search");
        searchprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchpriceActionPerformed(evt);
            }
        });

        pricefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pricefieldActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Arial", 3, 24)); // NOI18N
        jLabel26.setText("Search On The Basis Of");

        jLabel29.setText("OR");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 20, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pricefield, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchpricecombo, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(searchprice, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(searchpricecombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pricefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchprice)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton4.setBackground(new java.awt.Color(13, 6, 48));
        jButton4.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 153, 0));
        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        Update5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Update5KeyPressed(evt);
            }
        });

        jLabel13.setText("Update Recommendation");

        jLabel12.setText("Update Brand");

        Update3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update3ActionPerformed(evt);
            }
        });
        Update3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Update3KeyPressed(evt);
            }
        });

        jLabel11.setText("Update Accessory Category");

        jLabel10.setText("Update Accessory Name");

        Update1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update1ActionPerformed(evt);
            }
        });
        Update1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Update1KeyPressed(evt);
            }
        });

        jLabel2.setText("Update Accessory ID");

        jLabel1.setFont(new java.awt.Font("Arial", 3, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Update On The Basis Of");

        jLabel23.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel23.setText("Update Budget Level");

        Update11.setBackground(new java.awt.Color(229, 128, 57));
        buttonGroup2.add(Update11);
        Update11.setText("High");
        Update11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update11ActionPerformed(evt);
            }
        });

        Update12.setBackground(new java.awt.Color(229, 128, 57));
        buttonGroup2.add(Update12);
        Update12.setText("Medium");

        Update13.setBackground(new java.awt.Color(229, 128, 57));
        buttonGroup2.add(Update13);
        Update13.setText("Low");

        jLabel22.setText("Update Accessory price");

        Update6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lens", "Camera", "Mic", "Tripod", "Blower", "SD Card" }));
        Update6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update6ActionPerformed(evt);
            }
        });

        jLabel28.setText("Update Stock");

        Update8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update8ActionPerformed(evt);
            }
        });
        Update8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Update8KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout search_displayLayout = new javax.swing.GroupLayout(search_display);
        search_display.setLayout(search_displayLayout);
        search_displayLayout.setHorizontalGroup(
            search_displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(search_displayLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(search_displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Update1)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Update2)
                    .addComponent(Update3)
                    .addComponent(Update4)
                    .addGroup(search_displayLayout.createSequentialGroup()
                        .addComponent(Update6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))
                    .addGroup(search_displayLayout.createSequentialGroup()
                        .addGroup(search_displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(search_displayLayout.createSequentialGroup()
                                .addComponent(Update11, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Update12, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Update13, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(search_displayLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(43, 43, 43)
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(search_displayLayout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel23)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(search_displayLayout.createSequentialGroup()
                        .addComponent(Update5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(Update8)))
                .addContainerGap())
        );
        search_displayLayout.setVerticalGroup(
            search_displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(search_displayLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Update1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Update2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Update3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Update4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(search_displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(search_displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Update5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Update8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(search_displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Update11)
                    .addComponent(Update12)
                    .addComponent(Update13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(search_displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Update6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(108, Short.MAX_VALUE))
        );

        getContentPane().add(search_display, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, 320, 690));

        jTable2.setBackground(new java.awt.Color(0, 0, 0));
        jTable2.setForeground(new java.awt.Color(255, 153, 0));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Canon 700D", "40000", "Canon", "10", "Camera", "High", "100"},
                {"2", "Canon Tripod", "2000", "Canon", "7", "Tripod", "High", "30"},
                {"3", "Canon 80mm", "10000", "Canon", "9", "Lens", "High", "23"},
                {"4", "Phot-R blower", "400", "Phot_r", "7", "Blower", "High", "55"},
                {"5", "cello micro SD", "3000", "Cello", "9", "SD Card", "High", "67"}
            },
            new String [] {
                "Accessory ID", "Accessory Name", "Price", "Brand", "Recommendation", "Category", "Budget Level", "In stock"
            }
        ));
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTable2.setMinimumSize(new java.awt.Dimension(800, 80));
        jTable2.setSelectionBackground(new java.awt.Color(255, 51, 51));
        jTable2.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout data_tableLayout = new javax.swing.GroupLayout(data_table);
        data_table.setLayout(data_tableLayout);
        data_tableLayout.setHorizontalGroup(
            data_tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data_tableLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 799, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        data_tableLayout.setVerticalGroup(
            data_tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, data_tableLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(data_table, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 80, 810, 610));

        jPanel1.setBackground(new java.awt.Color(229, 128, 57));

        Delete_all_button.setBackground(new java.awt.Color(0, 0, 0));
        Delete_all_button.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        Delete_all_button.setForeground(new java.awt.Color(255, 51, 51));
        Delete_all_button.setText("DELETE ALL");
        Delete_all_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_all_buttonActionPerformed(evt);
            }
        });

        jButton3RemoveSelectedRow.setBackground(new java.awt.Color(0, 51, 51));
        jButton3RemoveSelectedRow.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jButton3RemoveSelectedRow.setForeground(new java.awt.Color(255, 0, 51));
        jButton3RemoveSelectedRow.setText("Remove Selected Row");
        jButton3RemoveSelectedRow.setBorder(null);
        jButton3RemoveSelectedRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3RemoveSelectedRowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(498, Short.MAX_VALUE)
                .addComponent(jButton3RemoveSelectedRow, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Delete_all_button, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Delete_all_button)
                    .addComponent(jButton3RemoveSelectedRow, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 700, 810, 70));

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help ");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem3.setText("Help ");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(1368, 814));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Update1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Update1ActionPerformed

    private void Update3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Update3ActionPerformed

    private void jButton3RemoveSelectedRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3RemoveSelectedRowActionPerformed
        // TODO add your handling code here:

        DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
        //get selected row index
        try{
            int SelectedRowIndex=jTable2.getSelectedRow();
            int conformation=JOptionPane.showConfirmDialog(null,"Do you really want to delete row number "+(SelectedRowIndex+1)+" from Table ?","Delete",JOptionPane.YES_NO_OPTION);
            if(conformation==0){
                model.removeRow(SelectedRowIndex);
                JOptionPane.showMessageDialog(null,"     Deletion Done  !!!");
            }else{
                JOptionPane.showMessageDialog(null,"    Cancellation Done  !!!");
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);

        }
    }//GEN-LAST:event_jButton3RemoveSelectedRowActionPerformed

    private void Delete_all_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_all_buttonActionPerformed
        // TODO add your handling code here:
        int conformation=JOptionPane.showConfirmDialog(null,"Do you really want to delete all from Table ?","Delete",JOptionPane.YES_NO_OPTION);
        if(conformation==0){
// To remove all the data from table name jtable2
            DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
            // making a privet object named model in class named DefaultTableModel
            int allrowCount=model.getRowCount();
            //creating a int type veriable which will store count of all the row in model table which is jTable2
            for(int i=allrowCount-1;i>=0;i--){
                //this is a for loop which will loop for count of allrowCount and model.removeRow(i)will remove row one by one
                model.removeRow(i);

            }
            JOptionPane.showMessageDialog(null,"     Deletion Done  !!!");
        }else{
            JOptionPane.showMessageDialog(null,"    Cancellation Done  !!!");
        }
    }//GEN-LAST:event_Delete_all_buttonActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
        String tableID=model.getValueAt(jTable2.getSelectedRow(),0).toString();
        String tablename=model.getValueAt(jTable2.getSelectedRow(),1).toString();
        String tableprice=model.getValueAt(jTable2.getSelectedRow(),2).toString();
        String tablebrand=model.getValueAt(jTable2.getSelectedRow(),3).toString();
        String tablerecommendation=model.getValueAt(jTable2.getSelectedRow(),4).toString();
        String tablecategory=model.getValueAt(jTable2.getSelectedRow(),5).toString();
        String tablebudget=model.getValueAt(jTable2.getSelectedRow(),6).toString();
        String tableStock=model.getValueAt(jTable2.getSelectedRow(),7).toString();

        Update1.setText(tableID);
        Update2.setText(tablename);
        Update3.setText(tableprice);
        Update4.setText(tablebrand);
        Update5.setText(tablerecommendation);
        Update6.setSelectedItem(tablecategory);
        if(tablebudget.equals(Update11.getText())){
            Update11.setSelected(true);
        }//for the radio button to set selected if relative
        if(tablebudget.equals(Update12.getText())){
            Update12.setSelected(true);
        }//for the radio button to set selected if relative
        if(tablebudget.equals(Update13.getText())){
            Update13.setSelected(true);
        }//for the radio button to set selected if relative
        Update8.setText(tableStock);

        jLabel15.setText("ID:- "+tableID);
        jLabel16.setText("Name:- "+tablename);
        jLabel17.setText("category:- "+tablecategory);
        jLabel18.setText("brand:- "+tablebrand);
        jLabel19.setText("recommendation:- "+tablerecommendation);
        jLabel20.setText("price:- "+tableprice);

        String img=(String)tablecategory;
        if("Blower".equals(img)){
            image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/blower.png")));
            image11.setText("");
            image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("Camera".equals(img)){
            image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/camera.png")));
            image11.setText("");
            image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("Tripod".equals(img)){
            image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/tripod.png")));
            image11.setText("");
            image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("Mic".equals(img)){
            image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/mic.png")));
            image11.setText("");
            image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("Lens".equals(img)){
            image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/lens.png")));
            image11.setText("");
            image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("SD Card".equals(img)){
            image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/sd.png")));
            image11.setText("");
            image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }

        if("Blower".equals(img)){
            image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/blower1.png")));
            image2.setText("");
            image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("Camera".equals(img)){
            image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/camera2.png")));
            image2.setText("");
            image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("Tripod".equals(img)){
            image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/tripod2.png")));
            image2.setText("");
            image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("Mic".equals(img)){
            image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/mic2.png")));
            image2.setText("");
            image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("Lens".equals(img)){
            image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/lens2.png")));
            image2.setText("");
            image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("SD Card".equals(img)){
            image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/sd2.png")));
            image2.setText("");
            image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }


    }//GEN-LAST:event_jTable2MouseClicked

    private void pricefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pricefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pricefieldActionPerformed

    private void Update11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Update11ActionPerformed

    private void searchpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchpriceActionPerformed
        // TODO add your handling code here:
        boolean a=true;
        System.out.println("fghjkjhgfdfghj:-"+(pricefield.getText()));
        try{
            Integer.valueOf(pricefield.getText());
            a=true;
        }catch(Exception e){
            a=false;
        }
        if("".equals(pricefield.getText())){
            JOptionPane.showMessageDialog(null,"Select a price value from the drop down list.");
        }else if(a==false){JOptionPane.showMessageDialog(null,"First click on the drop down list button then  \nSelect a price value from the drop down list.");}
        else{
            Vector<String> dataa=new Vector<>();
            DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
            int allrowCount=model.getRowCount();

            int dataArrayID[]=new int[allrowCount];
            String dataArrayName[]=new String[allrowCount];
            String dataArrayBrand[]=new String[allrowCount];
            int dataArrayRecommendation[]=new int[allrowCount];
            String dataArrayCategory[]=new String[allrowCount];
            //creating a int type veriable which will store count of all the row in model table which is jTable2
            for(int i=0;i<allrowCount;i++){
                String tableprice=model.getValueAt(jTable2.convertRowIndexToModel(i),2).toString();
                dataa.add(tableprice);

                String tableID=model.getValueAt(jTable2.convertRowIndexToModel(i),0).toString();
                String tableName=model.getValueAt(jTable2.convertRowIndexToModel(i),1).toString();
                String tableBrand=model.getValueAt(jTable2.convertRowIndexToModel(i),3).toString();
                String tableRecommendation=model.getValueAt(jTable2.convertRowIndexToModel(i),4).toString();
                String tableCategory=model.getValueAt(jTable2.convertRowIndexToModel(i),5).toString();

                dataArrayID[i]=Integer.valueOf(tableID);
                dataArrayName[i]=tableName;
                dataArrayBrand[i]=tableBrand;
                dataArrayRecommendation[i]=Integer.valueOf(tableRecommendation);
                dataArrayCategory[i]=tableCategory;
                /*System.out.println(dataArrayID[i]);
            System.out.println("ID:-"+dataArrayID[i]+"|| Name:-"+dataArrayName[i]+"|| Price:-"+dataa.get(i)+"|| brand:-"+dataArrayBrand[i]+"|| Recommendation:-"+dataArrayRecommendation[i]+"|| Category:-"+dataArrayCategory[i]);
                 */
            }

            //first make array of Vector
            int dataArray[]=new int[dataa.toArray().length];//making a array named dataArray which will store data of vector named dataa and the number of the ittration of dataArray list is determined by ''int[dataa.toArray().length]'' statement
            for(int i=0;i<dataa.toArray().length;i++){
                dataArray[i]=Integer.valueOf(dataa.get(i));
                //System.out.println("ID:-"+(i+1)+"Array:-"+dataArray[i]+" dataa:-"+dataa.get(i));
            }

            //selection short of data
            int nn=dataArray.length;
            for(int f=0;f<nn;f++){
                for(int i=0;i<nn;i++){
                    int smallNumberIndex=i;
                    //JOptionPane.showMessageDialog(null,i);
                    for(int j=i;j<nn;j++){
                        if(dataArray[smallNumberIndex]>dataArray[j]){
                            smallNumberIndex=j;

                            // Swap the found minimum element with the first 
                            // element 
                            int temp=dataArray[smallNumberIndex];
                            dataArray[smallNumberIndex]=dataArray[i];
                            dataArray[i]=temp;

                            ///////////////////////////////////////////////
                            //trying to swap all the other colums
                            int temp1=dataArrayID[smallNumberIndex];
                            dataArrayID[smallNumberIndex]=dataArrayID[i];
                            dataArrayID[i]=temp1;
                            ///////////////////////////////////////////////
                            String temp2=dataArrayName[smallNumberIndex];
                            dataArrayName[smallNumberIndex]=dataArrayName[i];
                            dataArrayName[i]=temp2;
                            ///////////////////////////////////////////////
                            String temp3=dataArrayBrand[smallNumberIndex];
                            dataArrayBrand[smallNumberIndex]=dataArrayBrand[i];
                            dataArrayBrand[i]=temp3;
                            ///////////////////////////////////////////////
                            int temp4=dataArrayRecommendation[smallNumberIndex];
                            dataArrayRecommendation[smallNumberIndex]=dataArrayRecommendation[i];
                            dataArrayRecommendation[i]=temp4;
                            ///////////////////////////////////////////////
                            String temp5=dataArrayCategory[smallNumberIndex];
                            dataArrayCategory[smallNumberIndex]=dataArrayCategory[i];
                            dataArrayCategory[i]=temp5;
                            ///////////////////////////////////////////////
                        }
                    }
                }
            }

            System.out.println("////////////////////////////");
            for(int i=0;i<dataa.toArray().length;i++){
                System.out.println("ID:-"+dataArrayID[i]+"|| Name:-"+dataArrayName[i]+"|| Price:-"+dataArray[i]+"|| brand:-"+dataArrayBrand[i]+"|| Recommendation:-"+dataArrayRecommendation[i]+"|| Category:-"+dataArrayCategory[i]);
            }
            System.out.println("////////////////////////////");
            for(int i=0;i<dataa.toArray().length;i++){
                System.out.println("ID:-"+(i+1)+"Array:-"+dataArray[i]+" dataa:-"+dataa.get(i));
            }

            System.out.println("////////////////////////////");
            for(int i=0;i<dataa.toArray().length;i++){
                System.out.println("ID:-"+(i+1)+"Array:-"+dataArray[i]+" dataa:-"+dataa.get(i));
            }
            //binary search the shorted data

            int result=Arrays.binarySearch(dataArray,Integer.valueOf(pricefield.getText()));
            if(result<0){
                JOptionPane.showMessageDialog(null,"element not found");
            }else{
                String toshow=(" ID:-"+dataArrayID[result]+"\n Name:-"+dataArrayName[result]+"\n Price:-"+dataArray[result]+"\n brand:-"+dataArrayBrand[result]+"\n Recommendation:-"+dataArrayRecommendation[result]+"\n Category:-"+dataArrayCategory[result]);
                String img1="";
                if(dataArrayCategory[result]=="Camera"){
                    img1="cameragif.gif";
                }else if(dataArrayCategory[result]=="Lens"){
                    img1="lensgiphy.gif";
                }else if(dataArrayCategory[result]=="Tripod"){
                    img1="tripod2.png";
                }else if(dataArrayCategory[result]=="Mic"){
                    img1="micgif.gif";
                }else if(dataArrayCategory[result]=="SD Card"){
                    img1="sdgif.gif";
                }else if(dataArrayCategory[result]=="Blower"){
                    img1="blower1.png";
                }
                
                ImageIcon iconn=new ImageIcon(img1);
                JOptionPane.showMessageDialog(null,toshow,"haha",JOptionPane.INFORMATION_MESSAGE,iconn);
            }
        }
        //show message dialog box contaning searched data
        //jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(dataa));

    }//GEN-LAST:event_searchpriceActionPerformed

    private void searchpricecomboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchpricecomboMouseClicked
        // TODO add your handling code here:
        Vector<String> data=new Vector<>();
        DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
        int allrowCount=model.getRowCount();
        //creating a int type veriable which will store count of all the row in model table which is jTable2
        for(int i=allrowCount-1;i>=0;i--){
            String tableprice=model.getValueAt(jTable2.convertRowIndexToModel(i),2).toString();
            data.add(tableprice);
        }
        searchpricecombo.setModel(new javax.swing.DefaultComboBoxModel<>(data));

    }//GEN-LAST:event_searchpricecomboMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //the following code helps to update the table by first taking data from the selected row of the table and edit jfield named Update1-8 respectively 
        //and when the user clicks this buton then the data from the jfield will be updated to the table

        DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
        if(jTable2.getSelectedRowCount()==1){
            String Id=Update1.getText();
            String name=Update2.getText();
            String price=Update3.getText();
            String brand=Update4.getText();
            String recommendation=Update5.getText();
            String catagory=Update6.getSelectedItem().toString();
            String stock=Update8.getText();

            String butt=" ";
            if(Update11.isSelected()){
                butt=Update11.getText();
            }else if(Update12.isSelected()){
                butt=Update12.getText();
            }else{
                butt=Update13.getText();
            }

            model.setValueAt(Id,jTable2.getSelectedRow(),0);
            model.setValueAt(name,jTable2.getSelectedRow(),1);
            model.setValueAt(price,jTable2.getSelectedRow(),2);
            model.setValueAt(brand,jTable2.getSelectedRow(),3);
            model.setValueAt(recommendation,jTable2.getSelectedRow(),4);
            model.setValueAt(catagory,jTable2.getSelectedRow(),5);
            model.setValueAt(butt,jTable2.getSelectedRow(),6);
            model.setValueAt(stock,jTable2.getSelectedRow(),7);

            jLabel15.setText("ID:- "+Id);
            jLabel16.setText("Name:- "+name);
            jLabel17.setText("category:- "+catagory);
            jLabel18.setText("brand:- "+brand);
            jLabel19.setText("recommendation:- "+recommendation);
            jLabel20.setText("price:- "+price);

            String img=(String)catagory;
            if("Blower".equals(img)){
                image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/blower.png")));
                image11.setText("");
                image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            }
            if("Camera".equals(img)){
                image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/camera.png")));
                image11.setText("");
                image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            }
            if("Tripod".equals(img)){
                image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/tripod.png")));
                image11.setText("");
                image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            }
            if("Mic".equals(img)){
                image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/mic.png")));
                image11.setText("");
                image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            }
            if("Lens".equals(img)){
                image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/lens.png")));
                image11.setText("");
                image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            }
            if("SD Card".equals(img)){
                image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/sd.png")));
                image11.setText("");
                image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            }

            if("Blower".equals(img)){
                image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/blower1.png")));
                image2.setText("");
                image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            }
            if("Camera".equals(img)){
                image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/camera2.png")));
                image2.setText("");
                image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            }
            if("Tripod".equals(img)){
                image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/tripod2.png")));
                image2.setText("");
                image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            }
            if("Mic".equals(img)){
                image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/mic2.png")));
                image2.setText("");
                image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            }
            if("Lens".equals(img)){
                image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/lens2.png")));
                image2.setText("");
                image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            }
            if("SD Card".equals(img)){
                image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/sd2.png")));
                image2.setText("");
                image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            }
            JOptionPane.showMessageDialog(null,"Update Done.");
        }else{
            if(jTable2.getSelectedRowCount()==0){
                JOptionPane.showMessageDialog(null,"Empty pdate field select product from table.");
            }else{
                JOptionPane.showMessageDialog(null,"Only single row can be updated at a time.");
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        
        
        
        
        String filePath= "C:\\Users\\dell\\Desktop\\__my all of the study met__\\2nd year\\emerging\\Appliances_IS\\src\\Open\\test.txt";
        File file = new File(filePath);
        try{
            BufferedReader br = new BufferedReader(new FileReader(file));
            String firstLine = br.readLine().trim();
            //String[] columnName = firstLine.split(",");
            DefaultTableModel model= (DefaultTableModel)jTable2.getModel();
            // making a privet object named model in class named DefaultTableModel
            int allrowCount=model.getRowCount();
            //creating a int type veriable which will store count of all the row in model table which is jTable2
            for(int i=allrowCount-1;i>=0;i--){
                //this is a for loop which will loop for count of allrowCount and model.removeRow(i)will remove row one by one
                model.removeRow(i);

            }
           // model.setColumnIdentifiers(columnName);
            
            Object[] tableLines= br.lines().toArray();
            
            for(int i=0;i<tableLines.length;i++){
                String line = tableLines[i].toString().trim();
                String[] DataRow = line.split("/"); 
                model.addRow(DataRow);
            }
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:

        File helpFile=new File("C:\\Users\\dell\\Desktop\\__my all of the study met__\\2nd year\\emerging\\Appliances_IS\\src\\Help\\help.pdf");
        try{
            Desktop.getDesktop().open(helpFile);
        }catch(IOException ex){
            Logger.getLogger(AppliancesInfo.class.getName()).log(Level.SEVERE,null,ex);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void InStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InStockActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void Add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_buttonActionPerformed
        // TODO add your handling code here:
        //code to load or add data into table
        //validation for empty data
        if(InID.getText().equals(" ")||InName.getText().equals(" ")||InBrand.getText().equals(" ")||InPrice.getText().equals("")||InStock.getText().equals(" ")){
            //if the add fields are blank
            JOptionPane.showMessageDialog(this,"Please Enter All Field !");
        }else{
            String val=(Integer.toString(InRecommendation.getValue()));
            String butt=" ";
            if(jRadioButton4.isSelected()){
                butt=jRadioButton4.getText();
            }else if(jRadioButton5.isSelected()){
                butt=jRadioButton5.getText();
            }else{
                butt=jRadioButton6.getText();
            }
            String data[]={InID.getText(),InName.getText(),InPrice.getText(),InBrand.getText(),val,InCategory.getSelectedItem().toString(),butt,InStock.getText()};
            DefaultTableModel tblModel=(DefaultTableModel)jTable2.getModel();
            //addstring array data
            tblModel.addRow(data);
            JOptionPane.showMessageDialog(this,"Add data successfully !");
            InID.setText("");
            InName.setText("");
            InPrice.setText("");
            InBrand.setText("");
            InStock.setText("");

            Vector<String> dataa=new Vector<>();
            DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
            int allrowCount=model.getRowCount();
            //creating a int type veriable which will store count of all the row in model table which is jTable2
            for(int i=allrowCount-1;i>=0;i--){
                String tableprice=model.getValueAt(jTable2.convertRowIndexToModel(i),2).toString();
                dataa.add(tableprice);
            }
            searchpricecombo.setModel(new javax.swing.DefaultComboBoxModel<>(dataa));

        }
        Vector<String> dataa=new Vector<>();
        DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
        int allrowCount=model.getRowCount();
        //creating a int type veriable which will store count of all the row in model table which is jTable2
        for(int i=allrowCount-1;i>=0;i--){
            String tableprice=model.getValueAt(jTable2.convertRowIndexToModel(i),2).toString();
            dataa.add(tableprice);
        }
        searchpricecombo.setModel(new javax.swing.DefaultComboBoxModel<>(dataa));
    }//GEN-LAST:event_Add_buttonActionPerformed

    private void InCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InCategoryActionPerformed
        // TODO add your handling code here:
        //
        String img=(String)InCategory.getSelectedItem();
        if("Blower".equals(img)){
            image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/blower.png")));
            image11.setText("");
            image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("Camera".equals(img)){
            image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/camera.png")));
            image11.setText("");
            image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("Tripod".equals(img)){
            image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/tripod.png")));
            image11.setText("");
            image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("Mic".equals(img)){
            image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/mic.png")));
            image11.setText("");
            image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("Lens".equals(img)){
            image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/lens.png")));
            image11.setText("");
            image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("SD Card".equals(img)){
            image11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/sd.png")));
            image11.setText("");
            image11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
    }//GEN-LAST:event_InCategoryActionPerformed

    private void InPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InPriceKeyPressed
        // TODO add your handling code here:
        String IDno=InPrice.getText();
        int length=IDno.length();
        char c=evt.getKeyChar();
        if(c=='9'){
            InPrice.setEditable(true);
        }else if(c>='0'&&c>='9'){
            InPrice.setEditable(false);
            JOptionPane.showMessageDialog(null,"Enter Only integer value please. ");
        }else{
            InPrice.setEditable(true);
        }
        if(evt.getKeyCode()==KeyEvent.VK_MINUS){
            InPrice.setEditable(false);
            JOptionPane.showMessageDialog(null,"Minus is invalid ");
        }
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            InPrice.setEditable(false);
            JOptionPane.showMessageDialog(null,"Space is invalid ");
        }
        if(evt.getKeyCode()==KeyEvent.VK_ENTER||evt.getKeyCode()==KeyEvent.VK_TAB){
            InBrand.requestFocus();
        }
    }//GEN-LAST:event_InPriceKeyPressed

    private void InNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InNameKeyPressed
        // TODO add your handling code here:

        if(evt.getKeyCode()==KeyEvent.VK_ENTER||evt.getKeyCode()==KeyEvent.VK_TAB){
            if(InName.getText().equals("")){
                JOptionPane.showMessageDialog(null,"Enter Name of the product.");
                InName.setText("");
                InName.requestFocus();
            }else{
                InPrice.requestFocus();
            }
        }
    }//GEN-LAST:event_InNameKeyPressed

    private void InBrandKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InBrandKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(InID.getText().equals(" ")||InName.getText().equals(" ")||InBrand.getText().equals(" ")||InPrice.getText().equals("")){
                //if the add fields are blank
                JOptionPane.showMessageDialog(this,"Please Enter All Field !");
            }else{
                if(InBrand.getText().equals("")){
                    JOptionPane.showMessageDialog(null,"Enter Brand of the product.");
                    InBrand.setText("");
                    InBrand.requestFocus();
                }

                InStock.requestFocus();
            }

        }
    }//GEN-LAST:event_InBrandKeyPressed

    private void InIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InIDKeyPressed
        // TODO add your handling code here:
        String IDno=InID.getText();
        int length=IDno.length();
        char c=evt.getKeyChar();

        if(c=='9'){
            InID.setEditable(true);
        }else if(c>='0'&&c>='9'){
            InID.setEditable(false);
            JOptionPane.showMessageDialog(null,"Enter Only integer value please. ");
        }else{
            InID.setEditable(true);
        }
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            InID.setEditable(false);
            JOptionPane.showMessageDialog(null,"Space is invalid ");
        }
        if(evt.getKeyCode()==KeyEvent.VK_MINUS){
            InID.setEditable(false);
            JOptionPane.showMessageDialog(null,"Minus is invalid ");
        }
        if(evt.getKeyCode()==KeyEvent.VK_ENTER||evt.getKeyCode()==KeyEvent.VK_TAB){

            //to make ID unique primary key validation
            boolean ask;
            Vector<String> dataa=new Vector<>();
            DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
            int allrowCount=model.getRowCount();
            //creating a int type veriable which will store count of all the row in model table which is jTable2
            for(int i=allrowCount-1;i>=0;i--){
                String tableprice=model.getValueAt(jTable2.convertRowIndexToModel(i),0).toString();
                dataa.add(tableprice);
            }
            ask=dataa.contains(IDno);

            if(ask==true){
                InID.setEditable(false);
                JOptionPane.showMessageDialog(null,"The ID "+InID.getText()+" already exist \n"+"Unique ID is required. ");
                InID.setEditable(false);
                InID.requestFocus();
                InID.setText("");
            }
            if(InID.getText().equals("")){
                JOptionPane.showMessageDialog(null,"Give a ID to the product.");
                InID.setText("");
                InID.requestFocus();
            }else{
                InName.requestFocus();
            }

        }
    }//GEN-LAST:event_InIDKeyPressed

    private void Update8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Update8ActionPerformed

    private void Update6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update6ActionPerformed
        // TODO add your handling code here:
        // the following code is for the combobox which is in update which change the image of the small image pannel acoeding to the selected Item in the combobox
        String img=(String)Update6.getSelectedItem();
        if("Blower".equals(img)){
            image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/blower1.png")));
            image2.setText("");
            image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("Camera".equals(img)){
            image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/camera2.png")));
            image2.setText("");
            image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("Tripod".equals(img)){
            image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/tripod2.png")));
            image2.setText("");
            image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("Mic".equals(img)){
            image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/mic2.png")));
            image2.setText("");
            image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("Lens".equals(img)){
            image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/lens2.png")));
            image2.setText("");
            image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }
        if("SD Card".equals(img)){
            image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apng_img/sd2.png")));
            image2.setText("");
            image2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        }

    }//GEN-LAST:event_Update6ActionPerformed

    private void InStockKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InStockKeyPressed
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(c=='9'){
            InStock.setEditable(true);
        }else if(c>='0'&&c>='9'){
            InStock.setEditable(false);
            JOptionPane.showMessageDialog(null,"Enter Only integer value please. ");
        }else{
            InStock.setEditable(true);
        }
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            InStock.setEditable(false);
            JOptionPane.showMessageDialog(null,"Space is invalid ");
        }
        if(evt.getKeyCode()==KeyEvent.VK_MINUS){
            InStock.setEditable(false);
            JOptionPane.showMessageDialog(null,"Minus is invalid ");
        }
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(InID.getText().equals(" ")||InName.getText().equals(" ")||InBrand.getText().equals(" ")||InPrice.getText().equals("")){
                //if the add fields are blank
                JOptionPane.showMessageDialog(this,"Please Enter All Field !");
            }else{
                if(InStock.getText().equals("")){
                    JOptionPane.showMessageDialog(null,"Enter Brand of the product.");
                    InStock.setText("");
                    InStock.requestFocus();
                }else{
                    String val=(Integer.toString(InRecommendation.getValue()));
                    String butt=" ";
                    if(jRadioButton4.isSelected()){
                        butt=jRadioButton4.getText();
                    }else if(jRadioButton5.isSelected()){
                        butt=jRadioButton5.getText();
                    }else{
                        butt=jRadioButton6.getText();
                    }
                    String data[]={InID.getText(),InName.getText(),InPrice.getText(),InBrand.getText(),val,InCategory.getSelectedItem().toString(),butt,InStock.getText()};
                    DefaultTableModel tblModel=(DefaultTableModel)jTable2.getModel();
                    //addstring array data
                    tblModel.addRow(data);
                    JOptionPane.showMessageDialog(this,"Add data successfully !");
                    InID.setText("");
                    InName.setText("");
                    InPrice.setText("");
                    InBrand.setText("");
                    InStock.setText("");
                    if(evt.getKeyCode()==KeyEvent.VK_ENTER||evt.getKeyCode()==KeyEvent.VK_TAB){
                        Vector<String> dataa=new Vector<>();
                        DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
                        int allrowCount=model.getRowCount();
                        //creating a int type veriable which will store count of all the row in model table which is jTable2
                        for(int i=allrowCount-1;i>=0;i--){
                            String tableprice=model.getValueAt(jTable2.convertRowIndexToModel(i),2).toString();
                            dataa.add(tableprice);
                        }
                        searchpricecombo.setModel(new javax.swing.DefaultComboBoxModel<>(dataa));
                        InID.requestFocus();
                    }
                }
            }
        }
    }//GEN-LAST:event_InStockKeyPressed

    private void Update1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Update1KeyPressed
        // TODO add your handling code here:
        char c=evt.getKeyChar();

        if(c=='9'){
            Update1.setEditable(true);
        }else if(c>='0'&&c>='9'){
            Update1.setEditable(false);
            JOptionPane.showMessageDialog(null,"Enter Only integer value please. ");
        }else{
            Update1.setEditable(true);
        }
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            Update1.setEditable(false);
            JOptionPane.showMessageDialog(null,"Space is invalid ");
        }
        if(evt.getKeyCode()==KeyEvent.VK_MINUS){
            Update1.setEditable(false);
            JOptionPane.showMessageDialog(null,"Minus is invalid ");
        }
    }//GEN-LAST:event_Update1KeyPressed

    private void Update3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Update3KeyPressed
        // TODO add your handling code here:
        char c=evt.getKeyChar();

        if(c=='9'){
            Update3.setEditable(true);
        }else if(c>='0'&&c>='9'){
            Update3.setEditable(false);
            JOptionPane.showMessageDialog(null,"Enter Only integer value please. ");
        }else{
            Update3.setEditable(true);
        }
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            Update3.setEditable(false);
            JOptionPane.showMessageDialog(null,"Space is invalid ");
        }
        if(evt.getKeyCode()==KeyEvent.VK_MINUS){
            Update3.setEditable(false);
            JOptionPane.showMessageDialog(null,"Minus is invalid ");
        }
    }//GEN-LAST:event_Update3KeyPressed

    private void Update8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Update8KeyPressed
        // TODO add your handling code here:
        char c=evt.getKeyChar();

        if(c=='9'){
            Update8.setEditable(true);
        }else if(c>='0'&&c>='9'){
            Update8.setEditable(false);
            JOptionPane.showMessageDialog(null,"Enter Only integer value please. ");
        }else{
            Update8.setEditable(true);
        }
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            Update8.setEditable(false);
            JOptionPane.showMessageDialog(null,"Space is invalid ");
        }
        if(evt.getKeyCode()==KeyEvent.VK_MINUS){
            Update8.setEditable(false);
            JOptionPane.showMessageDialog(null,"Minus is invalid ");
        }
    }//GEN-LAST:event_Update8KeyPressed

    private void Update5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Update5KeyPressed
        // TODO add your handling code here:
        char c=evt.getKeyChar();

        if(c=='9'){
            Update5.setEditable(true);
        }else if(c>='0'&&c>='9'){
            Update5.setEditable(false);
            JOptionPane.showMessageDialog(null,"Enter Only integer value please. ");
        }else{
            Update5.setEditable(true);
        }
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            Update5.setEditable(false);
            JOptionPane.showMessageDialog(null,"Space is invalid ");
        }
        if(evt.getKeyCode()==KeyEvent.VK_MINUS){
            Update5.setEditable(false);
            JOptionPane.showMessageDialog(null,"Minus is invalid ");
        }
    }//GEN-LAST:event_Update5KeyPressed

    private void searchpricecomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchpricecomboActionPerformed
        // TODO add your handling code here:
        pricefield.setText(searchpricecombo.getSelectedItem().toString());

    }//GEN-LAST:event_searchpricecomboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]){
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try{
            for(javax.swing.UIManager.LookAndFeelInfo info:javax.swing.UIManager.getInstalledLookAndFeels()){
                if("Nimbus".equals(info.getName())){
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }catch(ClassNotFoundException|InstantiationException|IllegalAccessException|javax.swing.UnsupportedLookAndFeelException ex){
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(()->{
            new AppliancesInfo().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_button;
    private javax.swing.JToggleButton Delete_all_button;
    private javax.swing.JPanel Heading_for_software_Name;
    private javax.swing.JTextField InBrand;
    private javax.swing.JComboBox<String> InCategory;
    private javax.swing.JTextField InID;
    private javax.swing.JTextField InName;
    private javax.swing.JTextField InPrice;
    private javax.swing.JSlider InRecommendation;
    private javax.swing.JTextField InStock;
    private javax.swing.JTextField Update1;
    private javax.swing.JRadioButton Update11;
    private javax.swing.JRadioButton Update12;
    private javax.swing.JRadioButton Update13;
    private javax.swing.JTextField Update2;
    private javax.swing.JTextField Update3;
    private javax.swing.JTextField Update4;
    private javax.swing.JTextField Update5;
    private javax.swing.JComboBox<String> Update6;
    private javax.swing.JTextField Update8;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JPanel data_table;
    private javax.swing.JLabel image11;
    private javax.swing.JLabel image2;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3RemoveSelectedRow;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JPanel new_accessory_entry;
    private javax.swing.JTextField pricefield;
    private javax.swing.JPanel search_display;
    private javax.swing.JButton searchprice;
    private javax.swing.JComboBox<String> searchpricecombo;
    // End of variables declaration//GEN-END:variables

}
